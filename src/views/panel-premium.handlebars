<link rel="stylesheet" href="/css/style.css" />
<div class="container-premium">
  <h1 class="text-center">Bienvenido al Panel de Usuarios Premium</h1>

  <div class="form-container-premium">
    <h2>Agregar Nuevo Producto Premium</h2>
    <form id="productForm" class="formulario-premium">
      <div class="formulario-campo-premium">
        <label for="title">Título:</label>
        <input type="text" id="title" name="title" required />
      </div>

      <div class="formulario-campo-premium">
        <label for="description">Descripción:</label>
        <textarea id="description" name="description" required></textarea>
      </div>

      <div class="formulario-campo-premium">
        <label for="price">Precio:</label>
        <input type="number" id="price" name="price" required />
      </div>

      <div class="formulario-campo-premium">
        <label for="img">Imagen:</label>
        <input type="text" id="img" name="img" placeholder="URL de la imagen" />
      </div>

      <div class="formulario-campo-premium">
        <label for="code">Código:</label>
        <input type="text" id="code" name="code" required />
      </div>

      <div class="formulario-campo-premium">
        <label for="stock">Stock:</label>
        <input type="number" id="stock" name="stock" required />
      </div>

      <div class="formulario-campo-premium">
        <label for="category">Categoría:</label>
        <input type="text" id="category" name="category" required />
      </div>

      <div class="formulario-campo-premium">
        <label for="status">Estado:</label>
        <select id="status" name="status">
          <option value="true">Activo</option>
          <option value="false">Inactivo</option>
        </select>
      </div>

      <button type="submit" class="btn-premium">Agregar Producto Premium</button>
    </form>
  </div>

  <h2 class="mt-5">Tus Productos Premium</h2>
  <ul id="userProductsList" class="product-list-premium">
    {{#each userProducts}}
      <li>
        <h3>{{this.title}}</h3>
        <p>{{this.description}}</p>
        <p>Precio: ${{this.price}}</p>
        <form class="deleteForm" data-product-id="{{this._id}}">
          <button
            type="button"
            class="deleteButton btn btn-danger"
          >Eliminar</button>
        </form>
      </li>
    {{/each}}
  </ul>
</div>

<script
  src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.5/socket.io.js"
></script>
<script>
  const socket = io(); // Manejar la solicitud POST del formulario
  document.getElementById('productForm').addEventListener('submit', async
  (event) => { event.preventDefault(); const formData = new
  FormData(event.target); const productData = {}; formData.forEach((value, key)
  => { productData[key] = value; }); try { const response = await
  fetch('/api/products', { method: 'POST', headers: { 'Content-Type':
  'application/json' }, body: JSON.stringify(productData) }); if (response.ok) {
  console.log('Producto agregado correctamente'); event.target.reset(); //
  Limpiar el formulario } else { console.error('Error al agregar el producto:',
  response.statusText); } } catch (error) { console.error('Error en la
  solicitud:', error.message); } }); // Manejar actualizaciones en tiempo real
  de la lista de productos socket.on('products', (products) => { const
  productList = document.getElementById('userProductsList');
  productList.innerHTML = ''; // Limpiar la lista antes de agregar los nuevos
  productos products.forEach(product => { const newItem =
  document.createElement('li'); newItem.innerHTML = ` <h3>${product.title}</h3>
  <p>${product.description}</p> <p>Precio: $${product.price}</p> <form
  class="deleteForm" data-product-id="${product._id}"> <button type="button"
  class="deleteButton btn btn-danger">Eliminar</button> </form> `;
  productList.appendChild(newItem); }); }); // Manejar la eliminación de
  productos
  document.getElementById('userProductsList').addEventListener('click', async
  (event) => { if (event.target.classList.contains('deleteButton')) { const
  productId = event.target.parentElement.dataset.productId; try { const response
  = await fetch(`/api/products/${productId}`, { method: 'DELETE' }); if
  (response.ok) { console.log('Producto eliminado correctamente del servidor');
  event.target.parentElement.parentElement.remove(); // Eliminar del DOM } else
  { console.error('Error al eliminar el producto:', response.statusText); } }
  catch (error) { console.error('Error en la solicitud:', error.message); } }
  });
</script>