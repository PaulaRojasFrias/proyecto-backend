<div class="users">
  <h1>Lista de Usuarios</h1>

  <table>
    <thead>
      <tr>
        <th>Nombre</th>
        <th>Email</th>
        <th>Rol</th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody>
      {{#each users}}
        <tr data-user-id="{{this._id}}">
          <td>{{this.first_name}} {{this.last_name}}</td>
          <td>{{this.email}}</td>
          <td>
            {{#if this.isAdmin}}
              <span class="user-role">Administrador</span>
            {{else}}
              <form action="/api/users/{{this._id}}/role" method="POST">
                <select name="newRole" class="user-role-selector">
                  <option value="user" {{#if this.isUser}}selected{{/if}}>Usuario</option>
                  <option value="premium" {{#if this.isPremium}}selected{{/if}}>Premium</option>
                  <option value="admin" {{#if this.isAdmin}}selected{{/if}}>Administrador</option>
                </select>
                <button type="submit" class="btn-update-role">Actualizar Rol</button>
              </form>
            {{/if}}
          </td>
          <td>
            {{#unless this.isAdmin}}
              <button class="btn-delete-user">Eliminar Usuario</button>
            {{/unless}}
          </td>
        </tr>
      {{/each}}
    </tbody>
  </table>
</div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.all.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const tableBody = document.querySelector('.users tbody');

      tableBody.addEventListener('click', async (event) => {
        if (event.target.classList.contains('btn-delete-user')) {
          const row = event.target.closest('tr');
          const userId = row.getAttribute('data-user-id');
          
          if (userId) {
            const result = await Swal.fire({
              title: '¿Estás seguro?',
              text: "No podrás revertir esto",
              icon: 'warning',
              showCancelButton: true,
              confirmButtonText: 'Sí, eliminar',
              cancelButtonText: 'Cancelar'
            });

            if (result.isConfirmed) {
              try {
                const response = await fetch(`/api/users/${userId}`, {
                  method: 'DELETE',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                });
                
                if (response.ok) {
                  row.remove();
                  Swal.fire(
                    'Eliminado',
                    'El usuario ha sido eliminado.',
                    'success'
                  );
                } else {
                  const errorData = await response.json();
                  Swal.fire(
                    'Error',
                    `Error al eliminar el usuario: ${errorData.error}`,
                    'error'
                  );
                }
              } catch (error) {
                console.error('Error:', error);
                Swal.fire(
                  'Error',
                  'Error al eliminar el usuario',
                  'error'
                );
              }
            }
          } else {
            Swal.fire(
              'Error',
              'ID de usuario no encontrado.',
              'error'
            );
          }
        }
      });
    });
  </script>